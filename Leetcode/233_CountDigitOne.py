class Solution(object):
    def countDigitOne(self, n):
        """
        :type n: int
        :rtype: int
        """

        count = 0  # 记录答案
        i = 1  # 代表当前所统计的数字位

        while i <= n:
            # 将n分为高n/i位和低n%i位
            a = int(n / i)
            b = n % i

            # 此时只考虑第i位（若i=1则表示个位，100表示百位）上出现1的情况，分三种情况：
            # 1.a的个位大于1，则此时有a/10+1次，且每一次都包含了（0~i-1）个低位的情况（乘法原理），因此为（a/10+1）*i
            # 2.a的个位为0，则此时有a/10次，算上低位的则有a/10*i次
            # （1，2两种情况可合并为（a+8）/10*i，因为只有在a的个位大于1时加8才会产生进位，等价于（a/10+1））
            # 3.a的各位为1，则此时有a/10+(b+1)次，之所以加b+1就是因为低位已不足i个，而是b+1个，因此算上低位共有a/10*i+(b+1)次
            # 因此1，2，3种情况合并为一个表达式：(a + 8) / 10 * i + (a % 10 == 1) * (b + 1)

            count += (a + 8) / 10 * i + (a % 10 == 1) * (b + 1)
            i *= 10

        return count